<templateSet group="Vue">
  <template name="newvue" value="&lt;template&gt;&#10;    &lt;div&gt;&lt;/div&gt;&#10;&lt;/template&gt;&#10;&lt;script&gt;&#10;export default {&#10;    name: '$CURSOR$',&#10;    props: {},&#10;    data() {&#10;        return {}&#10;    },&#10;    inject: {&#10;        $modal: {&#10;            default: null,&#10;        },&#10;    },&#10;    mounted() {&#10;        var $info = this.$refs.info&#10;        this.loading = true&#10;        //窗口显示,加载数据&#10;        this.$modal.beforeEnter((next) =&gt; {&#10;            this.fetch().then(next)&#10;        })&#10;        //提交&#10;        this.$modal.onBtnClick('confirm', (next, options) =&gt; {&#10;            $info.validate((valid) =&gt; {&#10;                if (valid) {&#10;                    this.confirm(next, options)&#10;                } else {&#10;                    options.closeModal = false&#10;                    next()&#10;                }&#10;            })&#10;        })&#10;    },&#10;    methods: {&#10;&#10;        fetch() {&#10;            // 修改&#10;            const viewRequest = this.id&#10;                ? __viewRequest(this.id)&#10;                : Promise.resolve()&#10;            return Promise.all([viewRequest])&#10;                .then((args) =&gt; {&#10;                    var [res] = args&#10;                    // 词典&#10;                    // Object.keys(this.dict).forEach((name) =&gt; {&#10;                    //     this.dict[name] = dictGroup[name]&#10;                    // })&#10;                    if (res) {&#10;                        //回显用户所属&#10;                        Object.keys(this.info).forEach(&#10;                            (name) =&gt; (this.info[name] = res.data.entity[name])&#10;                        )&#10;                    }&#10;                })&#10;                .finally(() =&gt; {&#10;                    this.loading = false&#10;                })&#10;        },&#10;        confirm(next, options) {&#10;            var formData = Object.assign({}, this.info)&#10;            if (this.id) {&#10;                __updateRequest(formData)&#10;                    .then(&#10;                        (res) =&gt; {&#10;                            this.$Message.success(&#10;                                this.$t('tips.update.success')&#10;                            )&#10;                        },&#10;                        () =&gt; (options.closeModal = false)&#10;                    )&#10;                    .then((res) =&gt; next())&#10;            } else {&#10;                delete formData.ver&#10;                __addRequest(formData)&#10;                    .then(&#10;                        (res) =&gt; {&#10;                            //调用修改用户所属接口&#10;                            this.$Message.success(&#10;                                this.$t('tips.add.success')&#10;                            )&#10;                        },&#10;                        () =&gt; (options.closeModal = false)&#10;                    )&#10;                    .then((res) =&gt; next())&#10;            }&#10;        },&#10;    },&#10;}&#10;&lt;/script&gt;&#10;&#10;&lt;style lang=&quot;less&quot; scoped&gt;&lt;/style&gt;&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="VUE_TOP_LEVEL" value="true" />
    </context>
  </template>
</templateSet>